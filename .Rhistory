select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = ".")) %>%
select(-one_of(topic_number))
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = "."))
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = ".")) %>%
select(-one_of(topic_number))
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = ".")) %>%
select(-c(topic_number))
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = "."))
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = "."))[, c(1, 2, 4, 5)]
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = "."))
grouped_dat <- grouped_dat[, c(1, 2, 4, 5)]
molten_dat <- melt(grouped_dat,
id.vars = c("task_pybossa_id", "contributor_id"),
measure.vars = "answer_list")
molten_dat <- melt(grouped_dat,
id.vars = c("task_pybossa_id", "contributor_id"),
measure.vars = "question_number")
molten_dat <- melt(grouped_dat,
id.vars = c("task_pybossa_id", "contributor_id"))
melted_dat <- NULL
molten_dat <- NULL
transpose_cols <- grouped_dat[, c(1, 2)]
transpose_cols <- grouped_dat[, c(3, 4)]
View(transpose_cols)
View(transpose_cols)
transpose_cols <- t(grouped_dat[, c(3, 4)])
unique(grouped_dat$question_number)
sort(unique(grouped_dat$question_number))
all_q <- sort(unique(grouped_dat$question_number))
contributors <- unique(grouped_dat$contributor_id)
View(grouped_dat)
tasks_and_contributors <- group_by(grouped_dat, task_pybossa_id, contributor_id)
View(tasks_and_contributors)
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize()
View(tasks_and_contributors)
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize(count = n())
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize() %>%
na.omit()
View(tasks_and_contributors)
print(
)
print(i)
for (i in tasks_and_contributors[1:10]) {
print(i)
}
for (i in tasks_and_contributors[1:10, ]) {
print(i)
}
print((i, j))
for ((i, j) in tasks_and_contributors[1:10, ]) {
print((i, j))
}
for ((i, j) in tasks_and_contributors[1:10, ]) {
print((i, j))
}
print(i, j)
for ((i, j) in tasks_and_contributors[1:10, ]) {
print(i, j)
}
return(data.frame(i))
for (i in tasks_and_contributors[1, ]) {
return(data.frame(i))
}
for (i in tasks_and_contributors[1, ]) {
data.frame(i)
}
library(jsonlite)
library(readr)
library(dplyr)
library(reshape2)
### CSV processing
dat <- read_csv("~/df-canonicalization/data/textthresher/dfcrowd1dh-2018-06-21T01.csv")
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = "."))
grouped_dat <- grouped_dat[, c(1, 2, 4, 5)]
all_q <- sort(unique(grouped_dat$question_number))
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize() %>%
na.omit()
library(readr)
library(dplyr)
library(jsonlite)
library(readr)
library(dplyr)
library(reshape2)
### CSV processing
dat <- read_csv("~/df-canonicalization/data/textthresher/dfcrowd1dh-2018-06-21T01.csv")
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = "."))
grouped_dat <- grouped_dat[, c(1, 2, 4, 5)]
all_q <- sort(unique(grouped_dat$question_number))
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize() %>%
na.omit()
View(grouped_dat)
all_q
data.frame(question_number = c("0.01", "1.01"), type = c("additive", "contradictory"))
View(dat)
View(grouped_dat %>% filter(contributor == 3 & task_pybossa_id == 372))
View(grouped_dat %>% filter(contributor_id == 3 & task_pybossa_id == 372))
test_sub_table <- grouped_dat %>% filter(contributor_id == 3 & task_pybossa_id == 372)
test_answers <- t(test_sub_table[, 3:4])
View(test_answers)
test_answers <- t(as.matrix(test_sub_table[, 3:4]))
test_answers <- as.matrix(test_sub_table[, 3:4])
as.matrix(test_sub_table[, 3:4])
View(test_answers)
test_answers[[1]]
test_answers[1]
dim(test_answers)
test_answers
test_answers[1, 2]
test_answers[1, 1]
test_answers[1, ]
as.data.frame(test_answers)
as.data.frame(t(test_answers))
View(test_sub_table)
View(test_answers)
View(tasks_and_contributors)
i = 1
task <- tasks_and_contributors[i, 1]
View(task)
task <- tasks_and_contributors[i, 1][1]
task <- tasks_and_contributors[[i, 1]]
contributor <- tasks_and_contributors[[i, 2]]
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
View(sub_answers)
colnames(sub_answers) <- sub_answers[1, ]
View(sub_answers)
sub_answers[1, ]
sub_answers[[1, ]]
unlist(sub_answers[1, ])
unlist(sub_answers[1, 1])
unlist(sub_answers[1, 2])
sub_answers[1, 1]
unlist(sub_answers[1, ])
unlist(sub_answers[1, ])[1]
unlist(sub_answers[1, ])[[1]]
unlist(sub_answers[1, ])
colnames(sub_answers) <- unlist(sub_answers[1, ])
View(sub_answers)
sub_answers <- sub_answers[-1, ]
View(sub_answers)
library(jsonlite)
library(readr)
library(dplyr)
library(reshape2)
### CSV processing
dat <- read_csv("~/df-canonicalization/data/textthresher/dfcrowd1dh-2018-06-21T01.csv")
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = "."))
grouped_dat <- grouped_dat[, c(1, 2, 4, 5)]
all_q <- sort(unique(grouped_dat$question_number))
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize() %>%
na.omit()
for (i in 1:nrow(tasks_and_contributors)) {
task <- tasks_and_contributors[[i, 1]]
contributor <- tasks_and_contributors[[i, 2]]
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
colnames(sub_answers) <- unlist(sub_answers[1, ])
sub_answers <- sub_answers[-1, ]
}
View(sub_answers)
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number)))
View(grouped_dat)
sapply(grouped_dat$question_number, function(x) {if (x < 10) {return(paste0(0, x))} else {return(as.character(x))}})
grouped_dat$question_number <- sapply(grouped_dat$question_number,
function(x) {if (x < 10) {
return(paste0(0, x))
} else {
return(as.character(x))
}
}
)
grouped_dat <- grouped_dat %>% mutate(question_number = paste(topic_number,
question_number,
sep = "."))
grouped_dat <- grouped_dat[, c(1, 2, 4, 5)]
View(grouped_dat)
library(readr)
library(dplyr)
###
dir <- "~/df-canonicalization/"
setwd(dir)
###
tua_dat <- read_csv("data/textthresher/DF_Crowd1.0_DataHunt-TUAS.csv")
metadata_dat <- read_csv("data/metadata_table.csv")
metadata_with_tua <- tua_dat %>%
inner_join(metadata_dat,
by = c("article_number" = "info_article_article_number",
"case_number" = "info_highlights_0_case_number")) %>%
select(-c("topic_name")) %>%
select(c(5, 1, 3, 7, 8, 4, 6, 2)) %>%
rename(event_place = info_article_metadata_city,
date_published = info_article_metadata_date_published,
TUA = offsets,
article_text = info_article_text.x)
###
tua_parser <- function(tua_text) {
# trash characters to remove
garbage <- c("”", "“")
# split input into list of strings
split_tua <- unlist(strsplit(test_tua, '\"'))
# check and remove trash characters
garbage_check <- sapply(garbage, grepl, split_tua)
for (j in 1:ncol(garbage_check)) {
for (i in 1:nrow(garbage_check)) {
if (garbage_check[i, j]) {
split_tua[i] <- gsub(garbage[j], "", split_tua[i])
}}}
without_extra <- split_tua[seq(2, length(split_tua), 2)]
return(list(without_extra))
}
View(metadata_with_tua)
test_tbl <- metadata_with_tua[1:2, ]
View(test_tbl)
sapply(test_tbl$TUA, tua_parser)
###
tua_parser <- function(tua_text) {
# trash characters to remove
garbage <- c("”", "“")
# split input into list of strings
split_tua <- unlist(strsplit(tua_text, '\"'))
# check and remove trash characters
garbage_check <- sapply(garbage, grepl, split_tua)
for (j in 1:ncol(garbage_check)) {
for (i in 1:nrow(garbage_check)) {
if (garbage_check[i, j]) {
split_tua[i] <- gsub(garbage[j], "", split_tua[i])
}}}
without_extra <- split_tua[seq(2, length(split_tua), 2)]
return(list(without_extra))
}
sapply(test_tbl$TUA, tua_parser)
###
parsed_tuas <- sapply(metadata_with_tua$TUA, tua_parser)
###
metadata_with_tua$parsed_tuas <- sapply(metadata_with_tua$TUA, tua_parser)
View(metadata_with_tua)
###
metadata_with_tua$TUA <- sapply(metadata_with_tua$TUA, tua_parser)
###
dir <- "~/df-canonicalization/"
setwd(dir)
###
tua_dat <- read_csv("data/textthresher/DF_Crowd1.0_DataHunt-TUAS.csv")
metadata_dat <- read_csv("data/metadata_table.csv")
metadata_with_tua <- tua_dat %>%
inner_join(metadata_dat,
by = c("article_number" = "info_article_article_number",
"case_number" = "info_highlights_0_case_number")) %>%
select(-c("topic_name")) %>%
select(c(5, 1, 3, 7, 8, 4, 6, 2)) %>%
rename(event_place = info_article_metadata_city,
date_published = info_article_metadata_date_published,
TUA = offsets,
article_text = info_article_text.x)
###
tua_parser <- function(tua_text) {
# trash characters to remove
garbage <- c("”", "“")
# split input into list of strings
split_tua <- unlist(strsplit(tua_text, '\"'))
# check and remove trash characters
garbage_check <- sapply(garbage, grepl, split_tua)
for (j in 1:ncol(garbage_check)) {
for (i in 1:nrow(garbage_check)) {
if (garbage_check[i, j]) {
split_tua[i] <- gsub(garbage[j], "", split_tua[i])
}}}
without_extra <- split_tua[seq(2, length(split_tua), 2)]
return(list(without_extra))
}
###
metadata_with_tua$TUA <- sapply(metadata_with_tua$TUA, tua_parser)
write_csv(metadata_dat, "metadata_table.csv")
View(metadata_with_tua)
write_csv(metadata_with_tua, "data/metadata_table.csv")
saveRDS(metadata_with_tua, "data/metadata_table.csv")
saveRDS(metadata_with_tua, "data/metadata_table.Rdata")
saveRDS(metadata_with_tua, "data/metadata_table.rds")
library(readr)
library(dplyr)
library(reshape2)
### CSV processing
dat <- read_csv("~/df-canonicalization/data/textthresher/dfcrowd1dh-2018-06-21T01.csv")
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number)))
grouped_dat$question_number <- sapply(grouped_dat$question_number,
function(x) {if (x < 10) {
return(paste0(0, x))
} else {
return(as.character(x))}})
grouped_dat <- grouped_dat %>% mutate(question_number = paste(topic_number,
question_number,
sep = "."))
grouped_dat <- grouped_dat[, c(1, 2, 4, 5)]
all_q <- sort(unique(grouped_dat$question_number))
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize() %>%
na.omit()
for (i in 1:nrow(tasks_and_contributors)) {
task <- tasks_and_contributors[[i, 1]]
contributor <- tasks_and_contributors[[i, 2]]
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
colnames(sub_answers) <- unlist(sub_answers[1, ])
sub_answers <- sub_answers[-1, ]
}
View(grouped_dat)
View(tasks_and_contributors)
View(sub_table)
View(sub_answers)
View(sub_table)
View(all_q)
View(dat)
