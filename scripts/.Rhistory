View(tasks_and_contributors)
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize()
View(tasks_and_contributors)
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize(count = n())
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize() %>%
na.omit()
View(tasks_and_contributors)
print(
)
print(i)
for (i in tasks_and_contributors[1:10]) {
print(i)
}
for (i in tasks_and_contributors[1:10, ]) {
print(i)
}
print((i, j))
for ((i, j) in tasks_and_contributors[1:10, ]) {
print((i, j))
}
for ((i, j) in tasks_and_contributors[1:10, ]) {
print((i, j))
}
print(i, j)
for ((i, j) in tasks_and_contributors[1:10, ]) {
print(i, j)
}
return(data.frame(i))
for (i in tasks_and_contributors[1, ]) {
return(data.frame(i))
}
for (i in tasks_and_contributors[1, ]) {
data.frame(i)
}
library(jsonlite)
library(readr)
library(dplyr)
library(reshape2)
### CSV processing
dat <- read_csv("~/df-canonicalization/data/textthresher/dfcrowd1dh-2018-06-21T01.csv")
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = "."))
grouped_dat <- grouped_dat[, c(1, 2, 4, 5)]
all_q <- sort(unique(grouped_dat$question_number))
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize() %>%
na.omit()
library(readr)
library(dplyr)
library(jsonlite)
library(readr)
library(dplyr)
library(reshape2)
### CSV processing
dat <- read_csv("~/df-canonicalization/data/textthresher/dfcrowd1dh-2018-06-21T01.csv")
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number))) %>%
mutate(question_number = paste(topic_number, question_number, sep = "."))
grouped_dat <- grouped_dat[, c(1, 2, 4, 5)]
all_q <- sort(unique(grouped_dat$question_number))
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize() %>%
na.omit()
View(grouped_dat)
all_q
data.frame(question_number = c("0.01", "1.01"), type = c("additive", "contradictory"))
View(dat)
View(grouped_dat %>% filter(contributor == 3 & task_pybossa_id == 372))
View(grouped_dat %>% filter(contributor_id == 3 & task_pybossa_id == 372))
test_sub_table <- grouped_dat %>% filter(contributor_id == 3 & task_pybossa_id == 372)
test_answers <- t(test_sub_table[, 3:4])
View(test_answers)
test_answers <- t(as.matrix(test_sub_table[, 3:4]))
test_answers <- as.matrix(test_sub_table[, 3:4])
as.matrix(test_sub_table[, 3:4])
View(test_answers)
test_answers[[1]]
test_answers[1]
dim(test_answers)
test_answers
test_answers[1, 2]
test_answers[1, 1]
test_answers[1, ]
as.data.frame(test_answers)
as.data.frame(t(test_answers))
View(test_sub_table)
View(test_answers)
View(tasks_and_contributors)
i = 1
task <- tasks_and_contributors[i, 1]
View(task)
task <- tasks_and_contributors[i, 1][1]
task <- tasks_and_contributors[[i, 1]]
contributor <- tasks_and_contributors[[i, 2]]
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
View(sub_answers)
colnames(sub_answers) <- sub_answers[1, ]
View(sub_answers)
sub_answers[1, ]
sub_answers[[1, ]]
unlist(sub_answers[1, ])
unlist(sub_answers[1, 1])
unlist(sub_answers[1, 2])
sub_answers[1, 1]
unlist(sub_answers[1, ])
unlist(sub_answers[1, ])[1]
unlist(sub_answers[1, ])[[1]]
unlist(sub_answers[1, ])
colnames(sub_answers) <- unlist(sub_answers[1, ])
View(sub_answers)
sub_answers <- sub_answers[-1, ]
View(sub_answers)
library(readr)
library(dplyr)
library(reshape2)
library(readr)
dat <- read_csv("C:/Users/Sidney/Desktop/df-canonicalization/data/textthresher/dfcrowd1dh-2018-06-21T01.csv")
listr <- function(s) {
if (length(s) == 1) {
return(s)
} else {
return(list(s))
}
}
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number)))
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = listr(unique(answer_number)))
grouped_dat <- dat %>%
group_by(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
select(task_pybossa_id,
contributor_id,
topic_number,
question_number,
answer_number) %>%
group_by(task_pybossa_id ,
contributor_id,
topic_number,
question_number) %>%
summarize(answer_list = list(unique(answer_number)))
View(grouped_dat)
grouped_dat$question_number <- sapply(grouped_dat$question_number,
function(x) {if (x < 10) {
return(paste0(0, x))
} else {
return(as.character(x))}})
grouped_dat <- grouped_dat %>% mutate(question_number = paste(topic_number,
question_number,
sep = "."))
grouped_dat <- grouped_dat[, c(1, 2, 4, 5)]
all_q <- sort(unique(grouped_dat$question_number))
tasks_and_contributors <- grouped_dat %>%
group_by(task_pybossa_id, contributor_id) %>%
summarize() %>%
na.omit()
col_names <- c("task", "contributor", all_q)
all_answers <- matrix(0, ncol = length(all_q) + 2,
nrow = nrow(tasks_and_contributors))
all_answers[, 1:2] <- as.matrix(tasks_and_contributors)
colnames(all_answers) <- col_names
unlistr <- function(s) {
if (length(s) == 1) {
return(unlist(s))
} else {
return(s)
}
}
unlistr(c(1, 2, 3))
unlistr(c(1))
grouped_dat[] <- lapply(grouped_dat, unlistr)
View(grouped_dat)
### retrieve task and contributor
task <- tasks_and_contributors[[i, 1]]
i = 1
### retrieve task and contributor
task <- tasks_and_contributors[[i, 1]]
contributor <- tasks_and_contributors[[i, 2]]
### access the answers
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
colnames(sub_answers) <- columns
sub_answers <- as.data.frame(sub_answers[-1, ])
### fill in columns for missing questions
missing_q <- setdiff(all_q, columns)
missing_ans <- as.data.frame(matrix(0, ncol = length(missing_q)))
colnames(missing_ans) <- missing_q
### bind to answered questions and reorder
all_q_ans <- cbind(sub_answers, missing_ans)[, all_q]
View(all_q_ans)
all_q_ans$0.01
all_q_ans$`0.01``
`
all_q_ans$`0.01`
unlistr <- function(s) {
if (length(s) == 1) {
return(unlist(s)[[1]])
} else {
return(s)
}
}
grouped_dat[] <- lapply(grouped_dat, unlistr)
### retrieve task and contributor
task <- tasks_and_contributors[[i, 1]]
contributor <- tasks_and_contributors[[i, 2]]
### access the answers
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
colnames(sub_answers) <- columns
sub_answers <- as.data.frame(sub_answers[-1, ])
### fill in columns for missing questions
missing_q <- setdiff(all_q, columns)
missing_ans <- as.data.frame(matrix(0, ncol = length(missing_q)))
colnames(missing_ans) <- missing_q
### bind to answered questions and reorder
all_q_ans <- cbind(sub_answers, missing_ans)[, all_q]
lapply(all_q_ans, unlistr)
all_q_ans_tbl <- answer_formatter(tasks_and_contributors[[1, 1]],
tasks_and_contributors[[1, 2]])
answer_formatter <- function(task, contributor) {
### access the answers
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
colnames(sub_answers) <- columns
sub_answers <- as.data.frame(sub_answers[-1, ])
### fill in columns for missing questions
missing_q <- setdiff(all_q, columns)
missing_ans <- as.data.frame(matrix(0, ncol = length(missing_q)))
colnames(missing_ans) <- missing_q
### bind to answered questions and reorder
all_q_ans <- cbind(sub_answers, missing_ans)[, all_q]
return(all_q_ans)
}
all_q_ans_tbl <- answer_formatter(tasks_and_contributors[[1, 1]],
tasks_and_contributors[[1, 2]])
View(all_q_ans_tbl)
all_q_ans_tbl
for (i in 1:nrow(tasks_and_contributors)) {
### retrieve task and contributor
task <- tasks_and_contributors[[i, 1]]
contributor <- tasks_and_contributors[[i, 2]]
### format the answers
ans_tbl <- answer_formatter(task, contributor)
### bind to the first row
all_q_ans_tbl <- rbind(ans_tbl)
}
all_q_ans_tbl <- answer_formatter(1)
answer_formatter <- function(tbl_row) {
### retrieve task and contributor
task <- tasks_and_contributors[[tbl_row, 1]]
contributor <- tasks_and_contributors[[tbl_row, 2]]
### access the answers
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
colnames(sub_answers) <- columns
sub_answers <- as.data.frame(sub_answers[-1, ])
### fill in columns for missing questions
missing_q <- setdiff(all_q, columns)
missing_ans <- as.data.frame(matrix(0, ncol = length(missing_q)))
colnames(missing_ans) <- missing_q
### bind to answered questions and reorder
all_q_ans <- cbind(sub_answers, missing_ans)[, all_q]
return(all_q_ans)
}
all_q_ans_tbl <- answer_formatter(1)
all_q_ans_tbl <- answer_formatter(2)
all_q_ans_tbl <- answer_formatter(3)
for (i in 1:nrow(tasks_and_contributors)) {
### format the answers
ans_tbl <- answer_formatter(i)
### bind to the first row
# all_q_ans_tbl <- rbind(ans_tbl)
}
for (i in 1:nrow(tasks_and_contributors)) {
### format the answers
print(i)
ans_tbl <- answer_formatter(i)
### bind to the first row
# all_q_ans_tbl <- rbind(ans_tbl)
}
tasks_and_contributors[[833, 1]]
tasks_and_contributors[[833, ]]
tasks_and_contributors[[833, 2]]
tbl_row = 833
### retrieve task and contributor
task <- tasks_and_contributors[[tbl_row, 1]]
contributor <- tasks_and_contributors[[tbl_row, 2]]
### access the answers
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
colnames(sub_answers) <- columns
sub_answers <- as.data.frame(sub_answers[-1, ])
### fill in columns for missing questions
missing_q <- setdiff(all_q, columns)
missing_ans <- as.data.frame(matrix(0, ncol = length(missing_q)))
colnames(missing_ans) <- missing_q
View(missing_ans)
View(sub_answers)
View(sub_table)
sub_table
sub_table[1, 4]
sub_table[1, 4][1]
sub_table[1, 4][[1]]
t(sub_table[, 3:4])
as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
### retrieve task and contributor
task <- tasks_and_contributors[[tbl_row, 1]]
contributor <- tasks_and_contributors[[tbl_row, 2]]
### access the answers
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
View(sub_answers)
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
colnames(sub_answers) <- columns
sub_answers <- as.data.frame(sub_answers[-1, ])
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
colnames(sub_answers) <- columns
sub_answers <- sub_answers[-1, ]
### access the answers
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
colnames(sub_answers) <- columns
View(sub_answers)
sub_answers[-1,]
sub_answers[2,]
sub_answers$`0.01`
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
sub_answers <- sub_answers[-1, ]
View(sub_answers)
colnames(sub_answers) <- columns
View(sub_answers)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
sub_answers <- sub_answers[-c(1), ]
View(sub_answers)
mode(sub_answers)
mode(sub_table)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
sub_answers <- sub_answers[c(FALSE, TRUE), ]
colnames(sub_answers) <- columns
sub_answers <- as.data.frame(sub_answers[c(FALSE, TRUE), ])
### access the answers
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
sub_answers <- as.data.frame(sub_answers[c(FALSE, TRUE), ])
colnames(sub_answers) <- columns
View(sub_answers)
### fill in columns for missing questions
missing_q <- setdiff(all_q, columns)
missing_ans <- as.data.frame(matrix(0, ncol = length(missing_q)))
colnames(missing_ans) <- missing_q
### bind to answered questions and reorder
all_q_ans <- cbind(sub_answers, missing_ans)[, all_q]
answer_formatter <- function(tbl_row) {
### retrieve task and contributor
task <- tasks_and_contributors[[tbl_row, 1]]
contributor <- tasks_and_contributors[[tbl_row, 2]]
### access the answers
sub_table <- grouped_dat %>%
filter(task_pybossa_id == task & contributor_id == contributor)
sub_answers <- as.data.frame(t(sub_table[, 3:4]))
### transform answers tall to wide
columns <- unlist(sub_answers[1, ])
sub_answers <- as.data.frame(sub_answers[c(FALSE, TRUE), ])
colnames(sub_answers) <- columns
### fill in columns for missing questions
missing_q <- setdiff(all_q, columns)
missing_ans <- as.data.frame(matrix(0, ncol = length(missing_q)))
colnames(missing_ans) <- missing_q
### bind to answered questions and reorder
all_q_ans <- cbind(sub_answers, missing_ans)[, all_q]
return(all_q_ans)
}
for (i in 1:nrow(tasks_and_contributors)) {
### format the answers
print(i)
ans_tbl <- answer_formatter(i)
### bind to the first row
# all_q_ans_tbl <- rbind(ans_tbl)
}
all_q_ans_tbl
all_q_ans_tbl <- answer_formatter(3)
all_q_ans_tbl <- answer_formatter(1)
for (i in 1:nrow(tasks_and_contributors)) {
### format the answers
print(i)
ans_tbl <- answer_formatter(i)
### bind to the first row
all_q_ans_tbl <- rbind(ans_tbl)
}
all_q_ans_tbl <- answer_formatter(1)
for (i in 1:nrow(tasks_and_contributors)) {
### format the answers
print(i)
ans_tbl <- answer_formatter(i)
### bind to the first row
all_q_ans_tbl <- rbind(all_q_ans_tbl, ans_tbl)
}
all_q_ans_tbl <- answer_formatter(1)
for (i in 2:nrow(tasks_and_contributors)) {
### format the answers
print(i)
ans_tbl <- answer_formatter(i)
### bind to the first row
all_q_ans_tbl <- rbind(all_q_ans_tbl, ans_tbl)
}
all_q_ans_tbl
?menu
?switch
menu(c("Windows", "Unix"), title = "What type of OS are you using? This will determine")
